<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.7.RELEASE</version>
	</parent>

	<groupId>org.vaadin</groupId>
	<artifactId>webinar-ui</artifactId>
	<name>webinar-ui</name>
	<packaging>war</packaging>

	<properties>
		<vaadin.version>12.0.4</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<jetty.plugin.version>9.2.3.v20140905</jetty.plugin.version>
		<project.source.version>1.8</project.source.version>
		<project.target.version>1.8</project.target.version>
		<project.encoding>UTF-8</project.encoding>
		<springboot.version>2.0.7.RELEASE</springboot.version>
		<vaadinspring.version>12.0.4</vaadinspring.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>${springboot.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-bom</artifactId>
			<version>${vaadin.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-core</artifactId>
            <version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>mpr-v7</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>7.7.15</version>
			<exclusions>
				<exclusion>
					<groupId>org.jsoup</groupId>
					<artifactId>jsoup</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-elemental</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>7.7.15</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<scope>provided</scope>
			<version>7.7.15</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring</artifactId>
			<version>10.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.25</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- By attaching the classes to a separate JAR, we can import them 
						directly in the production overlay project, making it easier to compile a 
						separate widgetset for production mode. -->
					<attachClasses>true</attachClasses>
					<!-- Exclude some unnecessary files generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
						WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>
			<!-- The Jetty plugin allows us to easily test the development build by 
				running jetty:run on the command line. -->
			<!--<plugin>-->
				<!--<groupId>org.eclipse.jetty</groupId>-->
				<!--<artifactId>jetty-maven-plugin</artifactId>-->
				<!--<version>${jetty.plugin.version}</version>-->
				<!--<configuration>-->
					<!--<scanIntervalSeconds>0</scanIntervalSeconds>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>7.7.15</version>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- TODO remove? -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<id>default</id>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
			  <groupId>io.gatling</groupId>
			  <artifactId>gatling-maven-plugin</artifactId>
			  <version>2.2.0</version>
			  <executions>
		          <execution>
		            <goals>
		              <goal>execute</goal>
		            </goals>
		          </execution>
		      </executions>
			</plugin> -->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<!-- TODO Remove when http://dev.vaadin.com/ticket/14924 is resolved -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>vaadin-maven-plugin</artifactId>
										<versionRange>[7.1.11,)</versionRange>
										<goals>
											<goal>compile-theme</goal>
											<goal>update-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
